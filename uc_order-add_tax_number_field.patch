diff --git a/uc_order/js/uc_order.js b/uc_order/js/uc_order.js
index 604ca07..12f0c76 100644
--- a/uc_order/js/uc_order.js
+++ b/uc_order/js/uc_order.js
@@ -145,6 +145,7 @@
       $('#edit-' + type + '-street2').val(address['street2']);
       $('#edit-' + type + '-city').val(address['city']);
       $('#edit-' + type + '-postal-code').val(address['postal_code']);
+      $('#edit-' + type + '-tax-number').val(address['tax_number']);
 
       if ($('#edit-' + type + '-country').val() !== address['country']) {
         $('#edit-' + type + '-country').val(address['country']);
diff --git a/uc_order/src/Entity/Order.php b/uc_order/src/Entity/Order.php
index 4425ff8..3b40202 100644
--- a/uc_order/src/Entity/Order.php
+++ b/uc_order/src/Entity/Order.php
@@ -418,7 +418,8 @@ class Order extends ContentEntityBase implements OrderInterface {
       ->setZone($this->get($type . '_zone')->value)
       ->setCountry($this->get($type . '_country')->value)
       ->setPostalCode($this->get($type . '_postal_code')->value)
-      ->setPhone($this->get($type . '_phone')->value);
+      ->setPhone($this->get($type . '_phone')->value)
+      ->setTaxNumber($this->get($type . '_tax_number')->value);
     return $address;
   }
 
@@ -436,6 +437,7 @@ class Order extends ContentEntityBase implements OrderInterface {
     $this->set($type . '_country', $address->getCountry());
     $this->set($type . '_postal_code', $address->getPostalCode());
     $this->set($type . '_phone', $address->getPhone());
+    $this->set($type . '_tax_number', $address->getTaxNumber());
     return $this;
   }
 
@@ -485,139 +487,181 @@ class Order extends ContentEntityBase implements OrderInterface {
    * {@inheritdoc}
    */
   public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
+
     $fields['order_id'] = BaseFieldDefinition::create('integer')
       ->setLabel(t('Order ID'))
       ->setDescription(t('The order ID.'))
       ->setReadOnly(TRUE)
       ->setSetting('unsigned', TRUE);
+
     $fields['uid'] = BaseFieldDefinition::create('entity_reference')
       ->setLabel(t('Customer'))
       ->setDescription(t('The user that placed the order.'))
       ->setSetting('target_type', 'user')
       ->setDefaultValueCallback('Drupal\uc_order\Entity\Order::getCurrentUserId');
+
     $fields['order_status'] = BaseFieldDefinition::create('entity_reference')
       ->setLabel(t('Order status'))
       ->setDescription(t('The uc_order_status entity ID indicating the order status'))
       ->setSetting('target_type', 'uc_order_status')
       ->setSetting('default_value', '')
       ->setSetting('max_length', 32);
+
     $fields['order_total'] = BaseFieldDefinition::create('decimal')
       ->setLabel(t('Order total'))
       ->setDescription(t('The total amount to be paid for the order.'))
       ->setSetting('default_value', 0.0)
       ->setSetting('precision', 16)
       ->setSetting('scale', 5);
+
     $fields['product_count'] = BaseFieldDefinition::create('integer')
       ->setLabel(t('Product count'))
       ->setDescription(t('The total product quantity of the order.'))
       ->setSetting('default_value', 0)
       ->setSetting('unsigned', TRUE);
+
     $fields['primary_email'] = BaseFieldDefinition::create('email')
       ->setLabel(t('E-mail address'))
       ->setDescription(t('The email address of the customer.'))
       ->setSetting('default_value', '')
       ->setSetting('max_length', 96);
+
     $fields['delivery_first_name'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Delivery first name'))
       ->setDescription(t('The first name of the person receiving shipment.'))
       ->setSetting('default_value', '');
+
     $fields['delivery_last_name'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Delivery last name'))
       ->setDescription(t('The last name of the person receiving shipment.'))
       ->setSetting('default_value', '');
+
     $fields['delivery_phone'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Delivery phone'))
       ->setDescription(t('The phone number at the delivery location.'))
       ->setSetting('default_value', '');
+
     $fields['delivery_company'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Delivery company'))
       ->setDescription(t('The company at the delivery location.'))
       ->setSetting('default_value', '');
+
     $fields['delivery_street1'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Delivery street 1'))
       ->setDescription(t('The street address of the delivery location.'))
       ->setSetting('default_value', '');
+
     $fields['delivery_street2'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Delivery street 2'))
       ->setDescription(t('The second line of the street address.'))
       ->setSetting('default_value', '');
+
     $fields['delivery_city'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Delivery city'))
       ->setDescription(t('The city of the delivery location.'))
       ->setSetting('default_value', '');
+
     $fields['delivery_zone'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Delivery state/province'))
       ->setDescription(t('The state/zone/province id of the delivery location.'))
       ->setSetting('default_value', '');
+
     $fields['delivery_postal_code'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Delivery postal code'))
       ->setDescription(t('The postal code of the delivery location.'))
       ->setSetting('default_value', '');
+
     $fields['delivery_country'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Delivery country'))
       ->setDescription(t('The country ID of the delivery location.'))
       ->setSetting('size', 'medium')
       ->setSetting('default_value', '');
+
+    $fields['delivery_tax_number'] = BaseFieldDefinition::create('string')
+      ->setLabel(t('Delivery tax number'))
+      ->setDescription(t('The tax number of the delivery address.'))
+      ->setSetting('default_value', '');
+
     $fields['billing_first_name'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Billing first name'))
       ->setDescription(t('The first name of the person paying for the order.'))
       ->setSetting('default_value', '');
+
     $fields['billing_last_name'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Billing last name'))
       ->setDescription(t('The last name of the person paying for the order.'))
       ->setSetting('default_value', '');
+
     $fields['billing_phone'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Billing phone'))
       ->setDescription(t('The phone number for the billing address.'))
       ->setSetting('default_value', '');
+
     $fields['billing_company'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Billing company'))
       ->setDescription(t('The company of the billing address.'))
       ->setSetting('default_value', '');
+
     $fields['billing_street1'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Billing street 1'))
       ->setDescription(t('The street address where the bill will be sent.'))
       ->setSetting('default_value', '');
+
     $fields['billing_street2'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Billing street 2'))
       ->setDescription(t('The second line of the street address.'))
       ->setSetting('default_value', '');
+
     $fields['billing_city'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Billing city'))
       ->setDescription(t('The city where the bill will be sent.'))
       ->setSetting('default_value', '');
+
     $fields['billing_zone'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Billing state/province'))
       ->setDescription(t('The state/zone/province ID where the bill will be sent.'))
       ->setSetting('default_value', '')
       ->setSetting('size', 'medium');
+
     $fields['billing_postal_code'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Billing postal code'))
       ->setDescription(t('The postal code where the bill will be sent.'))
       ->setSetting('default_value', '');
+
     $fields['billing_country'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Billing country'))
       ->setDescription(t('The country ID where the bill will be sent.'))
       ->setSetting('default_value', '')
       ->setSetting('size', 'medium');
+
+    $fields['billing_tax_number'] = BaseFieldDefinition::create('string')
+      ->setLabel(t('Billing tax number'))
+      ->setDescription(t('The tax number of the billing address.'))
+      ->setSetting('default_value', '');
+
     $fields['payment_method'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Payment method'))
       ->setDescription(t('The method of payment.'))
       ->setSetting('default_value', '')
       ->setSetting('max_length', 32);
+
     $fields['data'] = BaseFieldDefinition::create('map')
       ->setLabel(t('Data'))
       ->setDescription(t('A serialized array of extra data.'));
+
     $fields['created'] = BaseFieldDefinition::create('created')
       ->setLabel(t('Created'))
       ->setDescription(t('The time that the order was created.'));
+
     $fields['changed'] = BaseFieldDefinition::create('changed')
       ->setLabel(t('Changed'))
       ->setDescription(t('The time that the order was last edited.'));
+
     $fields['host'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Host'))
       ->setDescription(t('Host IP address of the person paying for the order.'))
       ->setSetting('default_value', '');
+
     $fields['currency'] = BaseFieldDefinition::create('string')
       ->setLabel(t('Currency'))
       ->setDescription(t('The ISO currency code for the order.'))
diff --git a/uc_order/uc_order.install b/uc_order/uc_order.install
index bacd993..8a8737a 100644
--- a/uc_order/uc_order.install
+++ b/uc_order/uc_order.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Field\BaseFieldDefinition;
+
 /**
  * @file
  * Install, update and uninstall functions for the uc_order module.
@@ -240,3 +242,26 @@ function uc_order_schema() {
 
   return $schema;
 }
+
+/**
+ *  Add 'deliver_tax_number' and 'billing_tax_fiels' fields to 'uc_order' entities.
+ */
+function uc_order_update_8001() {
+  $manager = \Drupal::entityDefinitionUpdateManager();
+
+  // Add delivery tax field.
+  $storage_definition = BaseFieldDefinition::create('string')
+    ->setLabel(t('Delivery tax number'))
+    ->setDescription(t('The tax number of the delivery address.'))
+    ->setSetting('default_value', '');
+
+  $manager->installFieldStorageDefinition('delivery_tax_number', 'uc_order', 'uc_order', $storage_definition);
+
+  // Add billing tax field.
+  $storage_definition = BaseFieldDefinition::create('string')
+    ->setLabel(t('Billing tax number'))
+    ->setDescription(t('The tax number of the billing address.'))
+    ->setSetting('default_value', '');
+
+  $manager->installFieldStorageDefinition('billing_tax_number', 'uc_order', 'uc_order', $storage_definition);
+}
diff --git a/uc_store/src/Address.php b/uc_store/src/Address.php
index 533f863..1b5207f 100644
--- a/uc_store/src/Address.php
+++ b/uc_store/src/Address.php
@@ -62,6 +62,7 @@ class Address implements AddressInterface {
       '!street2' => $this->street2,
       '!city' => $this->city,
       '!postal_code' => $this->postal_code,
+      '!tax_number' => $this->tax_number,
     );
 
     $country = $this->country ? \Drupal::service('country_manager')->getCountry($this->country) : NULL;
diff --git a/uc_store/src/AddressInterface.php b/uc_store/src/AddressInterface.php
index 37ac99c..9dfbbf4 100644
--- a/uc_store/src/AddressInterface.php
+++ b/uc_store/src/AddressInterface.php
@@ -207,6 +207,24 @@ interface AddressInterface {
   public function setEmail($email);
 
   /**
+   * Returns the tax number.
+   *
+   * @return string
+   *   The tax number.
+   */
+  public function getTaxNumber();
+
+  /**
+   * Sets the tax number.
+   *
+   * @param string $tax_number
+   *   The tax number.
+   *
+   * @return $this
+   */
+  public function setTaxNumber($tax_number);
+
+  /**
    * Compares two Address objects to determine if they represent the same
    * physical address.
    *
diff --git a/uc_store/src/AddressTrait.php b/uc_store/src/AddressTrait.php
index fa7b4e3..adc8cba 100644
--- a/uc_store/src/AddressTrait.php
+++ b/uc_store/src/AddressTrait.php
@@ -101,6 +101,13 @@ trait AddressTrait {
   public $email = '';
 
   /**
+   * Email address.
+   *
+   * @var string
+   */
+  public $tax_number = '';
+
+  /**
    * {@inheritdoc}
    */
   public function setId($id) {
@@ -284,6 +291,21 @@ trait AddressTrait {
   /**
    * {@inheritdoc}
    */
+  public function getTaxNumber() {
+    return $this->tax_number;
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function setTaxNumber($tax_number) {
+    $this->tax_number = $tax_number;
+    return $this;
+  }
+
+  /**
+   * {@inheritdoc}
+   */
   public function isSamePhysicalLocation(AddressInterface $address) {
     $physicalProperty = array(
       'street1', 'street2', 'city', 'zone', 'country', 'postal_code'
diff --git a/uc_store/src/Element/UcAddress.php b/uc_store/src/Element/UcAddress.php
index 413cdf1..9b98992 100644
--- a/uc_store/src/Element/UcAddress.php
+++ b/uc_store/src/Element/UcAddress.php
@@ -59,6 +59,7 @@ class UcAddress extends Element\FormElement {
       'postal_code' => t('Postal code'),
       'phone' => t('Phone number'),
       'email' => t('E-mail'),
+      'tax_number' => t('Tax number'),
     );
 
     $element['#tree'] = TRUE;
diff --git a/uc_store/src/Form/AddressFieldsForm.php b/uc_store/src/Form/AddressFieldsForm.php
index 72c4ea8..24d8528 100644
--- a/uc_store/src/Form/AddressFieldsForm.php
+++ b/uc_store/src/Form/AddressFieldsForm.php
@@ -56,6 +56,7 @@ class AddressFieldsForm extends ConfigFormBase {
       'country' => $this->t('Country'),
       'postal_code' => $this->t('Postal code'),
       'phone' => $this->t('Phone number'),
+      'tax_number' => $this->t('Tax number'),
     );
 
     foreach ($fields as $field => $label) {
diff --git a/uc_store/uc_store.module b/uc_store/uc_store.module
index a8a7490..dc85ed8 100644
--- a/uc_store/uc_store.module
+++ b/uc_store/uc_store.module
@@ -481,6 +481,7 @@ function uc_get_addresses($uid, $type = 'billing') {
   $alias['zone'] = $query->addField('o', $type . '_zone', 'zone');
   $alias['postal_code'] = $query->addField('o', $type . '_postal_code', 'postal_code');
   $alias['country'] = $query->addField('o', $type . '_country', 'country');
+  $alias['tax_number'] = $query->addField('o', $type . '_tax_number', 'tax_number');
 
   $active = \Drupal::entityQuery('uc_order_status')
     ->condition('weight', 0, '>=')
